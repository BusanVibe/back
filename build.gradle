plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'

	// Kotlin 추가
	id 'org.jetbrains.kotlin.jvm' version '1.9.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.0'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.0'
}

group = 'busanVibe'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Kotlin 필수
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger/OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Spring Security
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// web socket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//mongo
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// 직렬화
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

	// xml
	implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.0")

	implementation 'org.springframework.boot:spring-boot-starter-webflux'



}

tasks.named('test') {
	useJUnitPlatform()
}

// Kotlin 컴파일 설정
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}
